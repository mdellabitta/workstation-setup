#### THIS PLAYBOOK ASSUMES THE SYSTEM WAS BOOTSTRAPPED WITH THE SCRIPT

---
- hosts: localhost
  become: yes

  tasks:


# echo 'deb http://download.opensuse.org/repositories/home:/ungoogled_chromium/Debian_Bullseye/ /' | sudo tee /etc/apt/sources.list.d/home-ungoogled_chromium.list > /dev/null
# curl -s 'https://download.opensuse.org/repositories/home:/ungoogled_chromium/Debian_Bullseye/Release.key' | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home-ungoogled_chromium.gpg > /dev/null
# sudo apt update
# sudo apt install -y ungoogled-chromium


    - name: Add Ungoogled Chromium key
      ansible.builtin.shell:
        cmd: "curl -sS https://download.opensuse.org/repositories/home:/ungoogled_chromium/Debian_Bullseye/Release.key | sudo gpg --dearmor | sudo tee /usr/share/keyrings/ungoogled-chromium-keyring.gpg"
      args:
        creates: /usr/share/keyrings/ungoogled-chromium-keyring.gpg

    - name: Add Ungoogled Chromium repo
      ansible.builtin.apt_repository:
        filename: ungoogled-chromium
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/ungoogled-chromium-keyring.gpg] http://download.opensuse.org/repositories/home:/ungoogled_chromium/Debian_Bullseye/ /"

    - name: Add 1password key
      ansible.builtin.shell:
        cmd: "curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor | sudo tee /usr/share/keyrings/1password-archive-keyring.gpg"
      args:
        creates: /usr/share/keyrings/1password-archive-keyring.gpg

    - name: Add 1password repo
      ansible.builtin.apt_repository:
        filename: 1password
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main"

    - name: Make 1password debsig dirs
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - '/etc/debsig/policies/AC2D62742012EA22/'
        - '/usr/share/debsig/keyrings/AC2D62742012EA22'

    - name: Add 1password debsig policy
      ansible.builtin.shell:
        cmd: "curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol"
      args:
        creates: /etc/debsig/policies/AC2D62742012EA22/1password.pol

    - name: Add 1password debsig signature
      ansible.builtin.shell:
        cmd: "curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor | sudo tee /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg"
      args:
        creates: /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg

    - name: Add virtualbox key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://www.virtualbox.org/download/oracle_vbox_2016.asc | gpg --dearmor | sudo tee /usr/share/keyrings/virtualbox-keyring.gpg > /dev/null"
      args:
        creates: /usr/share/keyrings/virtualbox-keyring.gpg

    - name: Add virtualbox repo
      ansible.builtin.apt_repository:
        filename: virtualbox
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/virtualbox-keyring.gpg] https://download.virtualbox.org/virtualbox/debian bullseye contrib"

    - name: Add vagrant key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/vagrant-keyring.gpg > /dev/null"
      args:
        creates: /usr/share/keyrings/vagrant-keyring.gpg

    - name: Add vagrant repo
      ansible.builtin.apt_repository:
        filename: vagrant
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/vagrant-keyring.gpg] https://apt.releases.hashicorp.com bullseye main"

    - name: Add signal key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null"
      args:
        creates: /usr/share/keyrings/signal-desktop-keyring.gpg

    - name: Add signal repo
      ansible.builtin.apt_repository:
        filename: signal 
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main"

    - name: Add tailscale key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://pkgs.tailscale.com/stable/debian/bullseye.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/tailscale-keyring.gpg > /dev/null"
      args:
        creates: /usr/share/keyrings/tailscale-keyring.gpg

    - name: Add tailscale repo
      ansible.builtin.apt_repository:
        filename: tailscale
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/tailscale-keyring.gpg] https://pkgs.tailscale.com/stable/debian bullseye main"

    - name: Upgrade all apt packages
      apt:
        upgrade: dist
        update_cache: yes
        force_apt_get: yes
        
    - name: Install packages
      apt:
        pkg:
          - ungoogled-chromium
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - apt-transport-https
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - emacs-nox
          - elpa-yaml-mode
          - zsh
          - tilix
          - zstd
          - flatpak
          - tailscale
          - traceroute
          - virtualbox
          - net-tools
          - vagrant
          - rsync
          - ncdu
          - 1password
          - ripgrep
          - jq
        state: latest

    - name: Set git pull strategy
      command: git config --global pull.rebase true
      become: yes
      become_user: michael
      
    - name: Set git default branch
      command: git config --global init.defaultBranch main
      become: yes
      become_user: michael

    - name: Set git name
      command: git config --global user.name "Michael Della Bitta"
      become: yes
      become_user: michael

    - name: Set git email
      command: git config --global user.email "mdellabitta@gmail.com"
      become: yes
      become_user: michael
          
    - name: Install pip packages
      pip:
        name:
          - docker-compose
          - s3cmd
        state: latest

    - name: Add user to docker group
      user:
        name: michael
        groups: docker
        append: yes

    - name: Change user shell to zsh 
      become: yes
      user:
        name: "michael"
        shell: /bin/zsh

    - name: Check if oh-my-zsh is installed
      stat: 
        path: /home/michael/.oh-my-zsh
      register: oh_my_zsh_installed

    - name: Download oh-my-zsh
      command: "curl -o /tmp/oh-my-zsh.sh -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
      when: oh_my_zsh_installed.stat.exists == False

    - name: Install oh-my-zsh
      command: "sh /tmp/oh-my-zsh.sh --unattended --keep-zshrc"
      become: yes
      become_user: michael
      args:
        creates: /home/michael/.oh-my-zsh

    - name: Load pyenv in .zshrc
      lineinfile:
        path: /home/michael/.zshrc
        regexp: 'pyenv init'
        line: export PYENV_ROOT="$HOME/.pyenv"; export PATH="$PYENV_ROOT/bin:$PATH"; eval "$(pyenv init --path)"
        insertafter: EOF

    - name: Download Powerlevel10k
      command: "git clone --depth=1 https://github.com/romkatv/powerlevel10k.git /home/michael/.oh-my-zsh/custom/themes/powerlevel10k"
      become: yes
      become_user: michael
      args:
        creates: /home/michael/.oh-my-zsh/custom/themes/powerlevel10k

    - name: Install Powerlevel10k theme
      ansible.builtin.lineinfile:
        path: /home/michael/.zshrc
        regexp: '^ZSH_THEME='
        line: ZSH_THEME="powerlevel10k/powerlevel10k"

    - name: Check if SDKMAN is installed
      stat: 
        path: /home/michael/.sdkman
      register: sdkman_installed

    - name: Download SDKMAN
      command: "curl -o /tmp/sdkman.sh -s 'https://get.sdkman.io?rcupdate=false'"
      when: sdkman_installed.stat.exists == False

    - name: Install SDKMAN
      command: "sh /tmp/sdkman.sh"
      become: yes
      become_user: michael
      args:
        creates: /home/michael/.sdkman
      when: sdkman_installed.stat.exists == False

    - name: Add SDKMAN to .zshrc
      lineinfile:
        path: /home/michael/.zshrc
        line: export SDKMAN_DIR="$HOME/.sdkman"; [[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"
        insertafter: EOF
        regexp: "sdkman-init"
      when: sdkman_installed.stat.exists == False

    - name: Check if nvm is installed
      stat: 
        path: /home/michael/.nvm
      register: nvm_installed

    - name: Download nvm
      command: curl -o /tmp/nvm.sh -s 'https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh'
      when: nvm_installed.stat.exists == False

    - name: Run nvm install script
      command: "sh /tmp/nvm.sh"
      become: yes
      become_user: michael
      args:
        creates: /home/michael/.nvm
      when: nvm_installed.stat.exists == False

    - name: Add nvm to .zshrc
      lineinfile:
        path: /home/michael/.zshrc
        line: export NVM_DIR="$HOME/.nvm"; [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
        insertafter: EOF
        regexp: "nvm.sh"
      when: nvm_installed.stat.exists == False

    - name: Check if zoom is installed
      command: dpkg-query -W zoom
      register: zoom_check_deb
      failed_when: zoom_check_deb.rc > 1
      changed_when: zoom_check_deb.rc == 1

    - name: Download zoom
      command: "curl -L -o /tmp/zoom_amd64.deb https://zoom.us/client/latest/zoom_amd64.deb"
      when: zoom_check_deb.rc == 1

    - name: Install zoom
      apt:
         deb: "/tmp/zoom_amd64.deb"
      become: true
      when: zoom_check_deb.rc == 1
      
    - name: Check if aws-cli is installed
      stat: 
        path: /usr/local/bin/aws
      register: aws_cli_installed
    
    - name: Download aws cli
      command: 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"'
      when: aws_cli_installed.stat.exists == False

    - name: Unzip aws cli
      command: unzip -u /tmp/awscliv2.zip -d /tmp
      when: aws_cli_installed.stat.exists == False

    - name: Install aws cli
      command: /tmp/aws/install --update
      become: yes
      when: aws_cli_installed.stat.exists == False
      
    # intellij
    # firefox
    # slack

  handlers:
