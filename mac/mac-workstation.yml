---
- hosts: localhost
  tasks:

    - name: Tap fonts cask
      community.general.homebrew_tap:
        name: homebrew/cask-fonts

    - name: Install casks
      community.general.homebrew_cask:
        pkg:
          - 1password
          - bitwarden
          - firefox
          - iterm2
          - signal
          - slack
          - todoist
          - vscodium
          - eloston-chromium
          - google-chrome
          - librewolf
          - zoom
          - docker
          - font-fira-code-nerd-font
          - font-meslo-lg-nerd-font
          - rectangle
          - tailscale
          - raycast
          - keybase
          - jetbrains-toolbox
        state: latest
      
    - name: Install packages
      community.general.homebrew:
        pkg:
          - tonarino/innernet/innernet
          - git
          - git-lfs
          - magic-wormhole
          - pyenv
          - curl
          - gnupg 
          - pinentry-mac
          - emacs
          - awscli
          - zstd
          - ripgrep
          - jq
          - ncdu
          - tmux
          - coreutils
        state: latest

    - name: Set pinentry program
      command: git config --global gpg.program gpg

    - name: Set git pull strategy
      command: git config --global pull.rebase true
      
    - name: Set git default branch
      command: git config --global init.defaultBranch main

    - name: Set git name
      command: git config --global user.name "Michael Della Bitta"

    - name: Set git email
      command: git config --global user.email "mdellabitta@tutanota.com"
    
    - name: Set up git lfs
      command: git lfs install
          
    - name: Check if oh-my-zsh is installed
      stat: 
        path: ~/.oh-my-zsh
      register: oh_my_zsh_installed

    - name: Download oh-my-zsh
      command: "curl -o /tmp/oh-my-zsh.sh -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
      when: oh_my_zsh_installed.stat.exists == False

    - name: Install oh-my-zsh
      command: "sh /tmp/oh-my-zsh.sh --unattended --keep-zshrc"
      args:
        creates: ~/.oh-my-zsh

    - name: Install zsh-autosuggestions
      command: git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      args:
        creates: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Install zsh-syntax-highlighting
      command: git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      args:
        creates: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

    - name: Edit omz into .zshrc
      ansible.builtin.blockinfile:
        path: ~/.zshrc
        create: true
        block: |
          export ZSH="~/.oh-my-zsh"
          plugins=(
            git
            node
            npm
            nvm
            zsh-autosuggestions
            zsh-syntax-highlighting
            pyenv
          )
          source $ZSH/oh-my-zsh.sh

    - name: Download Powerlevel10k
      command: "git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k"
      args:
        creates: ~/.oh-my-zsh/custom/themes/powerlevel10k

    - name: Install Powerlevel10k theme
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        regexp: '^ZSH_THEME='
        line: ZSH_THEME="powerlevel10k/powerlevel10k"

    - name: Check if SDKMAN is installed
      stat: 
        path: ~/.sdkman
      register: sdkman_installed

    - name: Download SDKMAN
      command: "curl -o /tmp/sdkman.sh -s 'https://get.sdkman.io?rcupdate=false'"
      when: sdkman_installed.stat.exists == False

    - name: Install SDKMAN
      command: "sh /tmp/sdkman.sh"
      args:
        creates: ~/.sdkman
      when: sdkman_installed.stat.exists == False

    - name: Add SDKMAN to .zshrc
      lineinfile:
        path: ~/.zshrc
        line: export SDKMAN_DIR="$HOME/.sdkman"; [[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"
        insertafter: EOF
        regexp: "sdkman-init"
      when: sdkman_installed.stat.exists == False

  handlers:
